name: pipeline

on:
  push:
    branches:
      - staging
      - master

permissions:
  id-token: write
  contents: read

jobs:
  set_stage:
    runs-on: ubuntu-latest
    outputs:
      stage: ${{ steps.set_stage.outputs.stage }}
    steps:
      - name: Set Stage Environment Variable
        id: set_stage
        run: |
          if [[ $GITHUB_REF == "refs/heads/master" ]]; then
            echo "stage=production" >> $GITHUB_OUTPUT
          else
            echo "stage=staging" >> $GITHUB_OUTPUT
          fi

  deploy:
    needs: set_stage
    runs-on: ubuntu-latest
    environment: ${{needs.set_stage.outputs.stage}}
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          aws-region: ${{ secrets.REGION || 'us-east-1' }}

      - name: Set Environment Variables for ${{ needs.set_stage.outputs.stage }}
        run: |
          {
            echo "REGION='${{ secrets.REGION || 'us-east-1' }}'";
            echo "VERSION_RETENTION_NUMBER=${{ secrets.VERSION_RETENTION_NUMBER || 3 }}";
            echo "LOG_RETENTION_DAYS=${{ secrets.LOG_RETENTION_DAYS || 7 }}";
            echo "DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}'";
            echo "DJANGO_SUPERUSER_USERNAME='${{ secrets.DJANGO_SUPERUSER_USERNAME || 'admin' }}'";
            echo "DJANGO_SUPERUSER_PASSWORD='${{ secrets.DJANGO_SUPERUSER_PASSWORD }}'";
            echo "DJANGO_SUPERUSER_EMAIL='${{ secrets.DJANGO_SUPERUSER_EMAIL }}'";
            echo "AWS_S3_ACCESS_KEY='${{ secrets.AWS_S3_ACCESS_KEY }}'";
            echo "AWS_S3_ACCESS_SECRET='${{ secrets.AWS_S3_ACCESS_SECRET }}'";

            if [ "${{ needs.set_stage.outputs.stage }}" == "staging" ]; then
              echo "AWS_S3_BUCKET_DB='${{ secrets.AWS_S3_BUCKET_DB }}'";
              echo "SQLITE_DB_NAME='${{ secrets.SQLITE_DB_NAME || 'database.db' }}'";
            fi

            if [ "${{ needs.set_stage.outputs.stage }}" == "production" ]; then
              echo "AWS_S3_CUSTOM_DOMAIN='${{ secrets.AWS_S3_CUSTOM_DOMAIN }}'";
              echo "RDS_MYSQL_DB_HOST='${{ secrets.RDS_MYSQL_DB_HOST }}'";
              echo "RDS_MYSQL_DB_NAME='${{ secrets.RDS_MYSQL_DB_NAME }}'";
              echo "RDS_MYSQL_DB_USER='${{ secrets.RDS_MYSQL_DB_USER }}'";
              echo "RDS_MYSQL_DB_PASSWORD='${{ secrets.RDS_MYSQL_DB_PASSWORD }}'";
            fi
          } >> .env.${{ needs.set_stage.outputs.stage }}

      - name: Setup NodeJS
        uses: actions/setup-node@v2
        with:
          node-version: 20.x

      - name: Install Dependencies
        run: npm install

      - name: Load Environment Variables
        run: |
          while IFS= read -r line; do
            if [[ ! "$line" =~ ^#.* && -n "$line" ]]; then
              export "$line"
            fi
          done < .env.${{needs.set_stage.outputs.stage}}

      - name: Serverless Deploy
        run: npx sls deploy -s ${{needs.set_stage.outputs.stage}}
