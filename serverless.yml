service: django-lambda

params:
  staging:
    DOCKERFILE: Dockerfile.staging
  prod:
    DOCKERFILE: Dockerfile.production

useDotenv: true

custom:
  deploymentBucket:
    accelerate: true
    blockPublicAccess: true
  prune:
    automatic: true
    number: ${env:VERSION_RETENTION_NUMBER, 3}
  dotenv:
    logging: false
    include:
      - NUMBER_LAMBDA_VERSIONS_KEEP
      - LOG_RETENTION_DAYS
      - AWS_S3_DEPLOYMENT_BUCKET
      - SQLITE_DB_NAME
      - AWS_S3_BUCKET_DB
    required:
      env:
        - AWS_S3_DEPLOYMENT_BUCKET
        - DJANGO_SECRET_KEY
        - DJANGO_SUPERUSER_USERNAME
        - DJANGO_SUPERUSER_PASSWORD
        - SQLITE_DB_NAME
        - AWS_S3_BUCKET_DB
        - AWS_S3_ACCESS_KEY
        - AWS_S3_ACCESS_SECRET

provider:
  name: aws
  region: ${env:REGION, 'us-east-1'}
  stage: staging
  deploymentBucket:
    name: ${env:AWS_S3_DEPLOYMENT_BUCKET}
  logRetentionInDays: ${env:LOG_RETENTION_DAYS, 7}
  ecr:
    images:
      django_lambda:
        path: "."
        file: ${param:DOCKERFILE}
  environment:
    DEBUG: 0
    DJANGO_ALLOWED_HOST: .lambda-url.${self:provider.region}.on.aws

functions:
  - app:
      image: django_lambda
      memorySize: 256
      timeout: 900
      url:
        cors: true

package:
  individually: true

plugins:
  - serverless-deployment-bucket
  - serverless-prune-plugin
  - serverless-dotenv-plugin
